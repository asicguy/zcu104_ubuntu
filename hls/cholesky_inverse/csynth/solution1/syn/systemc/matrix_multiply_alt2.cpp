// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_multiply_alt2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_multiply_alt2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_multiply_alt2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> matrix_multiply_alt2::ap_ST_fsm_state1 = "1";
const sc_lv<3> matrix_multiply_alt2::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> matrix_multiply_alt2::ap_ST_fsm_state4 = "100";
const bool matrix_multiply_alt2::ap_const_boolean_1 = true;
const sc_lv<32> matrix_multiply_alt2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrix_multiply_alt2::ap_const_lv32_1 = "1";
const bool matrix_multiply_alt2::ap_const_boolean_0 = false;
const sc_lv<1> matrix_multiply_alt2::ap_const_lv1_0 = "0";
const sc_lv<1> matrix_multiply_alt2::ap_const_lv1_1 = "1";
const sc_lv<7> matrix_multiply_alt2::ap_const_lv7_0 = "0000000";
const sc_lv<3> matrix_multiply_alt2::ap_const_lv3_0 = "000";
const sc_lv<6> matrix_multiply_alt2::ap_const_lv6_0 = "000000";
const sc_lv<7> matrix_multiply_alt2::ap_const_lv7_40 = "1000000";
const sc_lv<7> matrix_multiply_alt2::ap_const_lv7_1 = "1";
const sc_lv<3> matrix_multiply_alt2::ap_const_lv3_1 = "1";
const sc_lv<6> matrix_multiply_alt2::ap_const_lv6_10 = "10000";
const sc_lv<3> matrix_multiply_alt2::ap_const_lv3_3 = "11";
const sc_lv<3> matrix_multiply_alt2::ap_const_lv3_4 = "100";
const sc_lv<2> matrix_multiply_alt2::ap_const_lv2_0 = "00";
const sc_lv<6> matrix_multiply_alt2::ap_const_lv6_1 = "1";
const sc_lv<32> matrix_multiply_alt2::ap_const_lv32_2 = "10";

matrix_multiply_alt2::matrix_multiply_alt2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sum_mult_U = new back_substitute_ahbi("sum_mult_U");
    sum_mult_U->clk(ap_clk);
    sum_mult_U->reset(ap_rst);
    sum_mult_U->address0(sum_mult_address0);
    sum_mult_U->ce0(sum_mult_ce0);
    sum_mult_U->q0(sum_mult_q0);
    sum_mult_U->address1(sum_mult_addr_reg_439);
    sum_mult_U->ce1(sum_mult_ce1);
    sum_mult_U->we1(sum_mult_we1);
    sum_mult_U->d1(sum_mult_d1);
    cholesky_inverse_ibs_U26 = new cholesky_inverse_ibs<1,1,32,32,32>("cholesky_inverse_ibs_U26");
    cholesky_inverse_ibs_U26->din0(sum_mult_q0);
    cholesky_inverse_ibs_U26->din1(mult_fu_177_p2);
    cholesky_inverse_ibs_U26->dout(tmp_7_fu_170_p2);
    cholesky_inverse_dEe_U27 = new cholesky_inverse_dEe<1,1,32,32,32>("cholesky_inverse_dEe_U27");
    cholesky_inverse_dEe_U27->din0(A_q0);
    cholesky_inverse_dEe_U27->din1(A_q1);
    cholesky_inverse_dEe_U27->dout(mult_fu_177_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_10_cast_fu_333_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_cast_fu_360_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( C_addr_reg_434 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_fu_170_p2 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_mid2_reg_406 );
    sensitive << ( tmp_1_mid2_reg_410 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_Col_assign_mid2_fu_299_p3);
    sensitive << ( Col_assign_reg_159 );
    sensitive << ( tmp_2_fu_293_p2 );

    SC_METHOD(thread_Row_assign_mid_fu_209_p3);
    sensitive << ( ap_phi_mux_Row_assign_phi_fu_152_p4 );
    sensitive << ( exitcond_flatten_fu_203_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_131);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten1_fu_185_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_Col_assign_2_phi_fu_130_p4);
    sensitive << ( Col_assign_2_reg_126 );
    sensitive << ( exitcond_flatten1_reg_397 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_i_i_mid2_v_reg_414 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_Row_assign_phi_fu_152_p4);
    sensitive << ( Row_assign_reg_148 );
    sensitive << ( exitcond_flatten1_reg_397 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_reg_419 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_c_fu_377_p2);
    sensitive << ( Col_assign_mid2_fu_299_p3 );

    SC_METHOD(thread_exitcond_flatten1_fu_185_p2);
    sensitive << ( indvar_flatten1_reg_115 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_203_p2);
    sensitive << ( indvar_flatten_reg_137 );
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_275_p2);
    sensitive << ( Col_assign_reg_159 );
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_mid_fu_281_p2);
    sensitive << ( exitcond_fu_275_p2 );
    sensitive << ( not_exitcond_flatten_fu_269_p2 );

    SC_METHOD(thread_indvar_flatten_next1_fu_191_p2);
    sensitive << ( indvar_flatten1_reg_115 );

    SC_METHOD(thread_indvar_flatten_next_fu_389_p3);
    sensitive << ( exitcond_flatten_fu_203_p2 );
    sensitive << ( indvar_flatten_op_fu_383_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_383_p2);
    sensitive << ( indvar_flatten_reg_137 );

    SC_METHOD(thread_k_fu_197_p2);
    sensitive << ( ap_phi_mux_Col_assign_2_phi_fu_130_p4 );

    SC_METHOD(thread_not_exitcond_flatten_fu_269_p2);
    sensitive << ( exitcond_flatten_fu_203_p2 );

    SC_METHOD(thread_r_fu_287_p2);
    sensitive << ( Row_assign_mid_fu_209_p3 );

    SC_METHOD(thread_sum_mult_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_14_cast_fu_371_p1 );

    SC_METHOD(thread_sum_mult_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_sum_mult_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_mid2_reg_406 );
    sensitive << ( tmp_1_mid2_reg_410 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_sum_mult_d1);
    sensitive << ( tmp_mid2_reg_406 );
    sensitive << ( tmp_1_mid2_reg_410 );
    sensitive << ( tmp_7_fu_170_p2 );
    sensitive << ( mult_fu_177_p2 );
    sensitive << ( ap_condition_131 );

    SC_METHOD(thread_sum_mult_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_mid2_reg_406 );
    sensitive << ( tmp_1_mid2_reg_410 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp6_fu_223_p2);
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_Col_assign_2_phi_fu_130_p4 );

    SC_METHOD(thread_tmp_10_cast_fu_333_p1);
    sensitive << ( tmp_3_fu_327_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_350_p1);
    sensitive << ( tmp_4_fu_342_p3 );

    SC_METHOD(thread_tmp_13_cast_fu_360_p1);
    sensitive << ( tmp_5_fu_354_p2 );

    SC_METHOD(thread_tmp_14_cast_fu_371_p1);
    sensitive << ( tmp_8_fu_365_p2 );

    SC_METHOD(thread_tmp_1_fu_315_p3);
    sensitive << ( tmp_fu_307_p3 );

    SC_METHOD(thread_tmp_1_mid1_fu_237_p2);
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( k_fu_197_p2 );

    SC_METHOD(thread_tmp_1_mid2_fu_249_p3);
    sensitive << ( exitcond_flatten_fu_203_p2 );
    sensitive << ( tmp_1_mid1_fu_237_p2 );
    sensitive << ( tmp_s_fu_243_p2 );

    SC_METHOD(thread_tmp_2_fu_293_p2);
    sensitive << ( exitcond_flatten_fu_203_p2 );
    sensitive << ( exitcond_mid_fu_281_p2 );

    SC_METHOD(thread_tmp_3_fu_327_p2);
    sensitive << ( tmp_9_cast_fu_323_p1 );
    sensitive << ( tmp_i_i_mid2_cast_fu_265_p1 );

    SC_METHOD(thread_tmp_4_fu_342_p3);
    sensitive << ( Col_assign_mid2_fu_299_p3 );

    SC_METHOD(thread_tmp_5_fu_354_p2);
    sensitive << ( tmp_i_i_mid2_cast_fu_265_p1 );
    sensitive << ( tmp_12_cast_fu_350_p1 );

    SC_METHOD(thread_tmp_8_fu_365_p2);
    sensitive << ( tmp_9_cast_fu_323_p1 );
    sensitive << ( tmp_i_i2_cast_fu_338_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_323_p1);
    sensitive << ( tmp_1_fu_315_p3 );

    SC_METHOD(thread_tmp_fu_307_p3);
    sensitive << ( Row_assign_mid_fu_209_p3 );
    sensitive << ( exitcond_mid_fu_281_p2 );
    sensitive << ( r_fu_287_p2 );

    SC_METHOD(thread_tmp_i_i2_cast_fu_338_p1);
    sensitive << ( Col_assign_mid2_fu_299_p3 );

    SC_METHOD(thread_tmp_i_i_mid2_cast_fu_265_p1);
    sensitive << ( tmp_i_i_mid2_v_fu_257_p3 );

    SC_METHOD(thread_tmp_i_i_mid2_v_fu_257_p3);
    sensitive << ( ap_phi_mux_Col_assign_2_phi_fu_130_p4 );
    sensitive << ( exitcond_flatten_fu_203_p2 );
    sensitive << ( k_fu_197_p2 );

    SC_METHOD(thread_tmp_mid1_fu_217_p2);
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( k_fu_197_p2 );

    SC_METHOD(thread_tmp_mid2_fu_229_p3);
    sensitive << ( exitcond_flatten_fu_203_p2 );
    sensitive << ( tmp_mid1_fu_217_p2 );
    sensitive << ( tmp6_fu_223_p2 );

    SC_METHOD(thread_tmp_s_fu_243_p2);
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_Col_assign_2_phi_fu_130_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten1_fu_185_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_multiply_alt2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten1_reg_115, "indvar_flatten1_reg_115");
    sc_trace(mVcdFile, Col_assign_2_reg_126, "Col_assign_2_reg_126");
    sc_trace(mVcdFile, indvar_flatten_reg_137, "indvar_flatten_reg_137");
    sc_trace(mVcdFile, Row_assign_reg_148, "Row_assign_reg_148");
    sc_trace(mVcdFile, Col_assign_reg_159, "Col_assign_reg_159");
    sc_trace(mVcdFile, exitcond_flatten1_fu_185_p2, "exitcond_flatten1_fu_185_p2");
    sc_trace(mVcdFile, exitcond_flatten1_reg_397, "exitcond_flatten1_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_191_p2, "indvar_flatten_next1_fu_191_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_mid2_fu_229_p3, "tmp_mid2_fu_229_p3");
    sc_trace(mVcdFile, tmp_mid2_reg_406, "tmp_mid2_reg_406");
    sc_trace(mVcdFile, tmp_1_mid2_fu_249_p3, "tmp_1_mid2_fu_249_p3");
    sc_trace(mVcdFile, tmp_1_mid2_reg_410, "tmp_1_mid2_reg_410");
    sc_trace(mVcdFile, tmp_i_i_mid2_v_fu_257_p3, "tmp_i_i_mid2_v_fu_257_p3");
    sc_trace(mVcdFile, tmp_i_i_mid2_v_reg_414, "tmp_i_i_mid2_v_reg_414");
    sc_trace(mVcdFile, tmp_fu_307_p3, "tmp_fu_307_p3");
    sc_trace(mVcdFile, tmp_reg_419, "tmp_reg_419");
    sc_trace(mVcdFile, C_addr_reg_434, "C_addr_reg_434");
    sc_trace(mVcdFile, sum_mult_addr_reg_439, "sum_mult_addr_reg_439");
    sc_trace(mVcdFile, c_fu_377_p2, "c_fu_377_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_389_p3, "indvar_flatten_next_fu_389_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, sum_mult_address0, "sum_mult_address0");
    sc_trace(mVcdFile, sum_mult_ce0, "sum_mult_ce0");
    sc_trace(mVcdFile, sum_mult_q0, "sum_mult_q0");
    sc_trace(mVcdFile, sum_mult_ce1, "sum_mult_ce1");
    sc_trace(mVcdFile, sum_mult_we1, "sum_mult_we1");
    sc_trace(mVcdFile, sum_mult_d1, "sum_mult_d1");
    sc_trace(mVcdFile, ap_phi_mux_Col_assign_2_phi_fu_130_p4, "ap_phi_mux_Col_assign_2_phi_fu_130_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_Row_assign_phi_fu_152_p4, "ap_phi_mux_Row_assign_phi_fu_152_p4");
    sc_trace(mVcdFile, tmp_10_cast_fu_333_p1, "tmp_10_cast_fu_333_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_360_p1, "tmp_13_cast_fu_360_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_371_p1, "tmp_14_cast_fu_371_p1");
    sc_trace(mVcdFile, tmp_7_fu_170_p2, "tmp_7_fu_170_p2");
    sc_trace(mVcdFile, mult_fu_177_p2, "mult_fu_177_p2");
    sc_trace(mVcdFile, exitcond_flatten_fu_203_p2, "exitcond_flatten_fu_203_p2");
    sc_trace(mVcdFile, k_fu_197_p2, "k_fu_197_p2");
    sc_trace(mVcdFile, tmp_mid1_fu_217_p2, "tmp_mid1_fu_217_p2");
    sc_trace(mVcdFile, tmp6_fu_223_p2, "tmp6_fu_223_p2");
    sc_trace(mVcdFile, tmp_1_mid1_fu_237_p2, "tmp_1_mid1_fu_237_p2");
    sc_trace(mVcdFile, tmp_s_fu_243_p2, "tmp_s_fu_243_p2");
    sc_trace(mVcdFile, exitcond_fu_275_p2, "exitcond_fu_275_p2");
    sc_trace(mVcdFile, not_exitcond_flatten_fu_269_p2, "not_exitcond_flatten_fu_269_p2");
    sc_trace(mVcdFile, Row_assign_mid_fu_209_p3, "Row_assign_mid_fu_209_p3");
    sc_trace(mVcdFile, exitcond_mid_fu_281_p2, "exitcond_mid_fu_281_p2");
    sc_trace(mVcdFile, tmp_2_fu_293_p2, "tmp_2_fu_293_p2");
    sc_trace(mVcdFile, r_fu_287_p2, "r_fu_287_p2");
    sc_trace(mVcdFile, tmp_1_fu_315_p3, "tmp_1_fu_315_p3");
    sc_trace(mVcdFile, tmp_9_cast_fu_323_p1, "tmp_9_cast_fu_323_p1");
    sc_trace(mVcdFile, tmp_i_i_mid2_cast_fu_265_p1, "tmp_i_i_mid2_cast_fu_265_p1");
    sc_trace(mVcdFile, tmp_3_fu_327_p2, "tmp_3_fu_327_p2");
    sc_trace(mVcdFile, Col_assign_mid2_fu_299_p3, "Col_assign_mid2_fu_299_p3");
    sc_trace(mVcdFile, tmp_4_fu_342_p3, "tmp_4_fu_342_p3");
    sc_trace(mVcdFile, tmp_12_cast_fu_350_p1, "tmp_12_cast_fu_350_p1");
    sc_trace(mVcdFile, tmp_5_fu_354_p2, "tmp_5_fu_354_p2");
    sc_trace(mVcdFile, tmp_i_i2_cast_fu_338_p1, "tmp_i_i2_cast_fu_338_p1");
    sc_trace(mVcdFile, tmp_8_fu_365_p2, "tmp_8_fu_365_p2");
    sc_trace(mVcdFile, indvar_flatten_op_fu_383_p2, "indvar_flatten_op_fu_383_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_131, "ap_condition_131");
#endif

    }
}

matrix_multiply_alt2::~matrix_multiply_alt2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sum_mult_U;
    delete cholesky_inverse_ibs_U26;
    delete cholesky_inverse_dEe_U27;
}

void matrix_multiply_alt2::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_397.read(), ap_const_lv1_0))) {
        Col_assign_2_reg_126 = tmp_i_i_mid2_v_reg_414.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        Col_assign_2_reg_126 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_0))) {
        Col_assign_reg_159 = c_fu_377_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        Col_assign_reg_159 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_397.read(), ap_const_lv1_0))) {
        Row_assign_reg_148 = tmp_reg_419.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        Row_assign_reg_148 = ap_const_lv3_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_0))) {
        indvar_flatten1_reg_115 = indvar_flatten_next1_fu_191_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten1_reg_115 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_137 = indvar_flatten_next_fu_389_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten_reg_137 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_0))) {
        C_addr_reg_434 =  (sc_lv<4>) (tmp_14_cast_fu_371_p1.read());
        sum_mult_addr_reg_439 =  (sc_lv<4>) (tmp_14_cast_fu_371_p1.read());
        tmp_1_mid2_reg_410 = tmp_1_mid2_fu_249_p3.read();
        tmp_mid2_reg_406 = tmp_mid2_fu_229_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten1_reg_397 = exitcond_flatten1_fu_185_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_0))) {
        tmp_i_i_mid2_v_reg_414 = tmp_i_i_mid2_v_fu_257_p3.read();
        tmp_reg_419 = tmp_fu_307_p3.read();
    }
}

void matrix_multiply_alt2::thread_A_address0() {
    A_address0 =  (sc_lv<4>) (tmp_10_cast_fu_333_p1.read());
}

void matrix_multiply_alt2::thread_A_address1() {
    A_address1 =  (sc_lv<4>) (tmp_13_cast_fu_360_p1.read());
}

void matrix_multiply_alt2::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_C_address0() {
    C_address0 = C_addr_reg_434.read();
}

void matrix_multiply_alt2::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_C_d0() {
    C_d0 = tmp_7_fu_170_p2.read();
}

void matrix_multiply_alt2::thread_C_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_1_mid2_reg_410.read(), ap_const_lv1_1))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_Col_assign_mid2_fu_299_p3() {
    Col_assign_mid2_fu_299_p3 = (!tmp_2_fu_293_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_2_fu_293_p2.read()[0].to_bool())? ap_const_lv3_0: Col_assign_reg_159.read());
}

void matrix_multiply_alt2::thread_Row_assign_mid_fu_209_p3() {
    Row_assign_mid_fu_209_p3 = (!exitcond_flatten_fu_203_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_203_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_Row_assign_phi_fu_152_p4.read());
}

void matrix_multiply_alt2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrix_multiply_alt2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_multiply_alt2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void matrix_multiply_alt2::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_multiply_alt2::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_multiply_alt2::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_multiply_alt2::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_multiply_alt2::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_multiply_alt2::thread_ap_condition_131() {
    ap_condition_131 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void matrix_multiply_alt2::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrix_multiply_alt2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_ap_phi_mux_Col_assign_2_phi_fu_130_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_397.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_Col_assign_2_phi_fu_130_p4 = tmp_i_i_mid2_v_reg_414.read();
    } else {
        ap_phi_mux_Col_assign_2_phi_fu_130_p4 = Col_assign_2_reg_126.read();
    }
}

void matrix_multiply_alt2::thread_ap_phi_mux_Row_assign_phi_fu_152_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_397.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_Row_assign_phi_fu_152_p4 = tmp_reg_419.read();
    } else {
        ap_phi_mux_Row_assign_phi_fu_152_p4 = Row_assign_reg_148.read();
    }
}

void matrix_multiply_alt2::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_c_fu_377_p2() {
    c_fu_377_p2 = (!Col_assign_mid2_fu_299_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(Col_assign_mid2_fu_299_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_multiply_alt2::thread_exitcond_flatten1_fu_185_p2() {
    exitcond_flatten1_fu_185_p2 = (!indvar_flatten1_reg_115.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_reg_115.read() == ap_const_lv7_40);
}

void matrix_multiply_alt2::thread_exitcond_flatten_fu_203_p2() {
    exitcond_flatten_fu_203_p2 = (!indvar_flatten_reg_137.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_137.read() == ap_const_lv6_10);
}

void matrix_multiply_alt2::thread_exitcond_fu_275_p2() {
    exitcond_fu_275_p2 = (!Col_assign_reg_159.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(Col_assign_reg_159.read() == ap_const_lv3_4);
}

void matrix_multiply_alt2::thread_exitcond_mid_fu_281_p2() {
    exitcond_mid_fu_281_p2 = (exitcond_fu_275_p2.read() & not_exitcond_flatten_fu_269_p2.read());
}

void matrix_multiply_alt2::thread_indvar_flatten_next1_fu_191_p2() {
    indvar_flatten_next1_fu_191_p2 = (!indvar_flatten1_reg_115.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(indvar_flatten1_reg_115.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void matrix_multiply_alt2::thread_indvar_flatten_next_fu_389_p3() {
    indvar_flatten_next_fu_389_p3 = (!exitcond_flatten_fu_203_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_flatten_fu_203_p2.read()[0].to_bool())? ap_const_lv6_1: indvar_flatten_op_fu_383_p2.read());
}

void matrix_multiply_alt2::thread_indvar_flatten_op_fu_383_p2() {
    indvar_flatten_op_fu_383_p2 = (!indvar_flatten_reg_137.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(indvar_flatten_reg_137.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matrix_multiply_alt2::thread_k_fu_197_p2() {
    k_fu_197_p2 = (!ap_phi_mux_Col_assign_2_phi_fu_130_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_Col_assign_2_phi_fu_130_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_multiply_alt2::thread_not_exitcond_flatten_fu_269_p2() {
    not_exitcond_flatten_fu_269_p2 = (exitcond_flatten_fu_203_p2.read() ^ ap_const_lv1_1);
}

void matrix_multiply_alt2::thread_r_fu_287_p2() {
    r_fu_287_p2 = (!Row_assign_mid_fu_209_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(Row_assign_mid_fu_209_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_multiply_alt2::thread_sum_mult_address0() {
    sum_mult_address0 =  (sc_lv<4>) (tmp_14_cast_fu_371_p1.read());
}

void matrix_multiply_alt2::thread_sum_mult_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        sum_mult_ce0 = ap_const_logic_1;
    } else {
        sum_mult_ce0 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_sum_mult_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_mid2_reg_410.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_1)))) {
        sum_mult_ce1 = ap_const_logic_1;
    } else {
        sum_mult_ce1 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_sum_mult_d1() {
    if (esl_seteq<1,1,1>(ap_condition_131.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_1)) {
            sum_mult_d1 = mult_fu_177_p2.read();
        } else if ((esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_mid2_reg_410.read()))) {
            sum_mult_d1 = tmp_7_fu_170_p2.read();
        } else {
            sum_mult_d1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        sum_mult_d1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matrix_multiply_alt2::thread_sum_mult_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_mid2_reg_410.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_mid2_reg_406.read(), ap_const_lv1_1)))) {
        sum_mult_we1 = ap_const_logic_1;
    } else {
        sum_mult_we1 = ap_const_logic_0;
    }
}

void matrix_multiply_alt2::thread_tmp6_fu_223_p2() {
    tmp6_fu_223_p2 = (!ap_phi_mux_Col_assign_2_phi_fu_130_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_Col_assign_2_phi_fu_130_p4.read() == ap_const_lv3_0);
}

void matrix_multiply_alt2::thread_tmp_10_cast_fu_333_p1() {
    tmp_10_cast_fu_333_p1 = esl_zext<64,6>(tmp_3_fu_327_p2.read());
}

void matrix_multiply_alt2::thread_tmp_12_cast_fu_350_p1() {
    tmp_12_cast_fu_350_p1 = esl_zext<6,5>(tmp_4_fu_342_p3.read());
}

void matrix_multiply_alt2::thread_tmp_13_cast_fu_360_p1() {
    tmp_13_cast_fu_360_p1 = esl_zext<64,6>(tmp_5_fu_354_p2.read());
}

void matrix_multiply_alt2::thread_tmp_14_cast_fu_371_p1() {
    tmp_14_cast_fu_371_p1 = esl_zext<64,6>(tmp_8_fu_365_p2.read());
}

void matrix_multiply_alt2::thread_tmp_1_fu_315_p3() {
    tmp_1_fu_315_p3 = esl_concat<3,2>(tmp_fu_307_p3.read(), ap_const_lv2_0);
}

void matrix_multiply_alt2::thread_tmp_1_mid1_fu_237_p2() {
    tmp_1_mid1_fu_237_p2 = (!k_fu_197_p2.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(k_fu_197_p2.read() == ap_const_lv3_3);
}

void matrix_multiply_alt2::thread_tmp_1_mid2_fu_249_p3() {
    tmp_1_mid2_fu_249_p3 = (!exitcond_flatten_fu_203_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_203_p2.read()[0].to_bool())? tmp_1_mid1_fu_237_p2.read(): tmp_s_fu_243_p2.read());
}

void matrix_multiply_alt2::thread_tmp_2_fu_293_p2() {
    tmp_2_fu_293_p2 = (exitcond_mid_fu_281_p2.read() | exitcond_flatten_fu_203_p2.read());
}

void matrix_multiply_alt2::thread_tmp_3_fu_327_p2() {
    tmp_3_fu_327_p2 = (!tmp_9_cast_fu_323_p1.read().is_01() || !tmp_i_i_mid2_cast_fu_265_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_9_cast_fu_323_p1.read()) + sc_biguint<6>(tmp_i_i_mid2_cast_fu_265_p1.read()));
}

void matrix_multiply_alt2::thread_tmp_4_fu_342_p3() {
    tmp_4_fu_342_p3 = esl_concat<3,2>(Col_assign_mid2_fu_299_p3.read(), ap_const_lv2_0);
}

void matrix_multiply_alt2::thread_tmp_5_fu_354_p2() {
    tmp_5_fu_354_p2 = (!tmp_12_cast_fu_350_p1.read().is_01() || !tmp_i_i_mid2_cast_fu_265_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_12_cast_fu_350_p1.read()) + sc_biguint<6>(tmp_i_i_mid2_cast_fu_265_p1.read()));
}

void matrix_multiply_alt2::thread_tmp_8_fu_365_p2() {
    tmp_8_fu_365_p2 = (!tmp_9_cast_fu_323_p1.read().is_01() || !tmp_i_i2_cast_fu_338_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_9_cast_fu_323_p1.read()) + sc_biguint<6>(tmp_i_i2_cast_fu_338_p1.read()));
}

void matrix_multiply_alt2::thread_tmp_9_cast_fu_323_p1() {
    tmp_9_cast_fu_323_p1 = esl_zext<6,5>(tmp_1_fu_315_p3.read());
}

void matrix_multiply_alt2::thread_tmp_fu_307_p3() {
    tmp_fu_307_p3 = (!exitcond_mid_fu_281_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_mid_fu_281_p2.read()[0].to_bool())? r_fu_287_p2.read(): Row_assign_mid_fu_209_p3.read());
}

void matrix_multiply_alt2::thread_tmp_i_i2_cast_fu_338_p1() {
    tmp_i_i2_cast_fu_338_p1 = esl_zext<6,3>(Col_assign_mid2_fu_299_p3.read());
}

void matrix_multiply_alt2::thread_tmp_i_i_mid2_cast_fu_265_p1() {
    tmp_i_i_mid2_cast_fu_265_p1 = esl_zext<6,3>(tmp_i_i_mid2_v_fu_257_p3.read());
}

void matrix_multiply_alt2::thread_tmp_i_i_mid2_v_fu_257_p3() {
    tmp_i_i_mid2_v_fu_257_p3 = (!exitcond_flatten_fu_203_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_203_p2.read()[0].to_bool())? k_fu_197_p2.read(): ap_phi_mux_Col_assign_2_phi_fu_130_p4.read());
}

void matrix_multiply_alt2::thread_tmp_mid1_fu_217_p2() {
    tmp_mid1_fu_217_p2 = (!k_fu_197_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(k_fu_197_p2.read() == ap_const_lv3_0);
}

void matrix_multiply_alt2::thread_tmp_mid2_fu_229_p3() {
    tmp_mid2_fu_229_p3 = (!exitcond_flatten_fu_203_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_203_p2.read()[0].to_bool())? tmp_mid1_fu_217_p2.read(): tmp6_fu_223_p2.read());
}

void matrix_multiply_alt2::thread_tmp_s_fu_243_p2() {
    tmp_s_fu_243_p2 = (!ap_phi_mux_Col_assign_2_phi_fu_130_p4.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_Col_assign_2_phi_fu_130_p4.read() == ap_const_lv3_3);
}

void matrix_multiply_alt2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond_flatten1_fu_185_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

}

