// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _back_substitute_alt_HH_
#define _back_substitute_alt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cholesky_inverse_ibs.h"
#include "cholesky_inverse_dEe.h"
#include "cholesky_inverse_jbC.h"
#include "cholesky_inverse_kbM.h"
#include "back_substitute_ahbi.h"

namespace ap_rtl {

struct back_substitute_alt : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<4> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_out< sc_logic > B_we0;
    sc_out< sc_lv<32> > B_d0;
    sc_out< sc_lv<4> > B_address1;
    sc_out< sc_logic > B_ce1;
    sc_out< sc_logic > B_we1;
    sc_out< sc_lv<32> > B_d1;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    back_substitute_alt(sc_module_name name);
    SC_HAS_PROCESS(back_substitute_alt);

    ~back_substitute_alt();

    sc_trace_file* mVcdFile;

    back_substitute_ahbi* row_sum_U;
    cholesky_inverse_ibs<1,1,32,32,32>* cholesky_inverse_ibs_U15;
    cholesky_inverse_dEe<1,1,32,32,32>* cholesky_inverse_dEe_U16;
    cholesky_inverse_jbC<1,5,32,32,32>* cholesky_inverse_jbC_U17;
    cholesky_inverse_kbM<1,1,32,32,32,32,2,32>* cholesky_inverse_kbM_U18;
    cholesky_inverse_kbM<1,1,32,32,32,32,2,32>* cholesky_inverse_kbM_U19;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_reg_161;
    sc_signal< sc_lv<3> > k_reg_195;
    sc_signal< sc_lv<1> > exitcond3_fu_229_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > i_1_fu_235_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > tmp_fu_268_p1;
    sc_signal< sc_lv<2> > tmp_reg_690;
    sc_signal< sc_lv<2> > tmp_reg_690_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_reg_690_pp0_iter2_reg;
    sc_signal< sc_lv<2> > tmp_reg_690_pp0_iter3_reg;
    sc_signal< sc_lv<2> > tmp_reg_690_pp0_iter4_reg;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<3> > i_2_fu_298_p2;
    sc_signal< sc_lv<3> > i_2_reg_726;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > tmp_20_cast_fu_316_p1;
    sc_signal< sc_lv<6> > tmp_20_cast_reg_731;
    sc_signal< sc_lv<1> > exitcond2_fu_292_p2;
    sc_signal< sc_lv<6> > tmp_43_cast_fu_328_p1;
    sc_signal< sc_lv<6> > tmp_43_cast_reg_737;
    sc_signal< sc_lv<32> > select_column_multip_fu_336_p6;
    sc_signal< sc_lv<32> > select_column_multip_reg_742;
    sc_signal< sc_lv<1> > exitcond1_fu_350_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<3> > j_1_fu_356_p2;
    sc_signal< sc_lv<3> > j_1_reg_752;
    sc_signal< sc_lv<1> > tmp_22_fu_362_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_368_p2;
    sc_signal< sc_lv<1> > tmp_23_reg_761;
    sc_signal< sc_lv<6> > tmp_24_cast_fu_374_p1;
    sc_signal< sc_lv<6> > tmp_24_cast_reg_765;
    sc_signal< sc_lv<4> > A_addr_2_reg_771;
    sc_signal< sc_lv<1> > exitcond_fu_388_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<3> > k_2_fu_394_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > tmp_25_fu_400_p2;
    sc_signal< sc_lv<1> > tmp_25_reg_785;
    sc_signal< sc_lv<4> > row_sum_addr_1_reg_789;
    sc_signal< sc_lv<2> > tmp_34_fu_428_p1;
    sc_signal< sc_lv<2> > tmp_34_reg_795;
    sc_signal< sc_lv<1> > grp_fu_223_p2;
    sc_signal< sc_lv<1> > tmp_29_reg_800;
    sc_signal< sc_lv<1> > tmp_27_reg_805;
    sc_signal< sc_lv<6> > tmp_43_fu_444_p2;
    sc_signal< sc_lv<6> > tmp_43_reg_810;
    sc_signal< sc_lv<2> > tmp_30_fu_459_p1;
    sc_signal< sc_lv<2> > tmp_30_reg_820;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state11;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<4> > row_sum_address0;
    sc_signal< sc_logic > row_sum_ce0;
    sc_signal< sc_lv<32> > row_sum_q0;
    sc_signal< sc_logic > row_sum_ce1;
    sc_signal< sc_logic > row_sum_we1;
    sc_signal< sc_lv<32> > row_sum_d1;
    sc_signal< sc_lv<3> > i1_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > j_reg_184;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > tmp_40_cast_fu_263_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_44_cast_fu_383_p1;
    sc_signal< sc_lv<64> > tmp_54_cast_fu_423_p1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > tmp_51_cast_fu_454_p1;
    sc_signal< sc_lv<64> > tmp_47_cast_fu_480_p1;
    sc_signal< sc_lv<64> > tmp_50_cast_fu_519_p1;
    sc_signal< sc_lv<32> > diag_3_fu_56;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > diag_3_1_fu_60;
    sc_signal< sc_lv<32> > diag_3_2_fu_64;
    sc_signal< sc_lv<32> > diag_3_3_fu_68;
    sc_signal< sc_lv<32> > column_multiplier_0_1_fu_76;
    sc_signal< sc_lv<32> > column_multiplier_0_3_fu_624_p3;
    sc_signal< sc_lv<32> > column_multiplier_0_2_fu_80;
    sc_signal< sc_lv<32> > column_multiplier_0_16_fu_616_p3;
    sc_signal< sc_lv<32> > column_multiplier_0_5_fu_84;
    sc_signal< sc_lv<32> > column_multiplier_0_14_fu_600_p3;
    sc_signal< sc_lv<32> > column_multiplier_0_6_fu_88;
    sc_signal< sc_lv<32> > column_multiplier_0_7_fu_576_p3;
    sc_signal< sc_lv<32> > select_column_multip_1_fu_538_p3;
    sc_signal< sc_lv<32> > grp_fu_211_p2;
    sc_signal< sc_lv<32> > grp_fu_211_p0;
    sc_signal< sc_lv<32> > grp_fu_211_p1;
    sc_signal< sc_lv<32> > tmp_33_fu_497_p6;
    sc_signal< sc_lv<32> > tmp_31_fu_533_p1;
    sc_signal< sc_lv<5> > tmp_36_fu_245_p3;
    sc_signal< sc_lv<6> > tmp_39_cast_fu_253_p1;
    sc_signal< sc_lv<6> > tmp_cast_fu_241_p1;
    sc_signal< sc_lv<6> > tmp_37_fu_257_p2;
    sc_signal< sc_lv<5> > tmp_38_fu_320_p3;
    sc_signal< sc_lv<2> > select_column_multip_fu_336_p5;
    sc_signal< sc_lv<6> > tmp_39_fu_378_p2;
    sc_signal< sc_lv<5> > tmp_45_fu_406_p3;
    sc_signal< sc_lv<6> > tmp_53_cast_fu_414_p1;
    sc_signal< sc_lv<6> > tmp_46_fu_418_p2;
    sc_signal< sc_lv<5> > tmp_42_fu_432_p3;
    sc_signal< sc_lv<6> > tmp_49_cast_fu_440_p1;
    sc_signal< sc_lv<6> > tmp_44_fu_449_p2;
    sc_signal< sc_lv<5> > tmp_40_fu_463_p3;
    sc_signal< sc_lv<6> > tmp_46_cast_fu_471_p1;
    sc_signal< sc_lv<6> > tmp_41_fu_475_p2;
    sc_signal< sc_lv<32> > subst_sum_fu_206_p2;
    sc_signal< sc_lv<32> > tmp_32_to_int_fu_523_p1;
    sc_signal< sc_lv<32> > tmp_32_neg_fu_527_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_545_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_558_p2;
    sc_signal< sc_lv<32> > column_multiplier_0_fu_550_p3;
    sc_signal< sc_lv<1> > sel_tmp3_fu_571_p2;
    sc_signal< sc_lv<32> > column_multiplier_0_4_fu_563_p3;
    sc_signal< sc_lv<32> > column_multiplier_0_8_fu_584_p3;
    sc_signal< sc_lv<32> > column_multiplier_0_9_fu_592_p3;
    sc_signal< sc_lv<32> > column_multiplier_0_15_fu_608_p3;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_304;
    sc_signal< bool > ap_condition_632;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_state8;
    static const sc_lv<7> ap_ST_fsm_state9;
    static const sc_lv<7> ap_ST_fsm_state10;
    static const sc_lv<7> ap_ST_fsm_pp1_stage0;
    static const sc_lv<7> ap_ST_fsm_state13;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_80000000;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_address1();
    void thread_B_ce0();
    void thread_B_ce1();
    void thread_B_d0();
    void thread_B_d1();
    void thread_B_we0();
    void thread_B_we1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state11_pp1_stage0_iter0();
    void thread_ap_block_state12_pp1_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_condition_304();
    void thread_ap_condition_632();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state11();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_column_multiplier_0_14_fu_600_p3();
    void thread_column_multiplier_0_15_fu_608_p3();
    void thread_column_multiplier_0_16_fu_616_p3();
    void thread_column_multiplier_0_3_fu_624_p3();
    void thread_column_multiplier_0_4_fu_563_p3();
    void thread_column_multiplier_0_7_fu_576_p3();
    void thread_column_multiplier_0_8_fu_584_p3();
    void thread_column_multiplier_0_9_fu_592_p3();
    void thread_column_multiplier_0_fu_550_p3();
    void thread_exitcond1_fu_350_p2();
    void thread_exitcond2_fu_292_p2();
    void thread_exitcond3_fu_229_p2();
    void thread_exitcond_fu_388_p2();
    void thread_grp_fu_211_p0();
    void thread_grp_fu_211_p1();
    void thread_grp_fu_223_p2();
    void thread_i_1_fu_235_p2();
    void thread_i_2_fu_298_p2();
    void thread_j_1_fu_356_p2();
    void thread_k_2_fu_394_p2();
    void thread_row_sum_address0();
    void thread_row_sum_ce0();
    void thread_row_sum_ce1();
    void thread_row_sum_d1();
    void thread_row_sum_we1();
    void thread_sel_tmp1_fu_558_p2();
    void thread_sel_tmp3_fu_571_p2();
    void thread_sel_tmp_fu_545_p2();
    void thread_select_column_multip_1_fu_538_p3();
    void thread_select_column_multip_fu_336_p5();
    void thread_tmp_20_cast_fu_316_p1();
    void thread_tmp_22_fu_362_p2();
    void thread_tmp_23_fu_368_p2();
    void thread_tmp_24_cast_fu_374_p1();
    void thread_tmp_25_fu_400_p2();
    void thread_tmp_30_fu_459_p1();
    void thread_tmp_31_fu_533_p1();
    void thread_tmp_32_neg_fu_527_p2();
    void thread_tmp_32_to_int_fu_523_p1();
    void thread_tmp_34_fu_428_p1();
    void thread_tmp_36_fu_245_p3();
    void thread_tmp_37_fu_257_p2();
    void thread_tmp_38_fu_320_p3();
    void thread_tmp_39_cast_fu_253_p1();
    void thread_tmp_39_fu_378_p2();
    void thread_tmp_40_cast_fu_263_p1();
    void thread_tmp_40_fu_463_p3();
    void thread_tmp_41_fu_475_p2();
    void thread_tmp_42_fu_432_p3();
    void thread_tmp_43_cast_fu_328_p1();
    void thread_tmp_43_fu_444_p2();
    void thread_tmp_44_cast_fu_383_p1();
    void thread_tmp_44_fu_449_p2();
    void thread_tmp_45_fu_406_p3();
    void thread_tmp_46_cast_fu_471_p1();
    void thread_tmp_46_fu_418_p2();
    void thread_tmp_47_cast_fu_480_p1();
    void thread_tmp_49_cast_fu_440_p1();
    void thread_tmp_50_cast_fu_519_p1();
    void thread_tmp_51_cast_fu_454_p1();
    void thread_tmp_53_cast_fu_414_p1();
    void thread_tmp_54_cast_fu_423_p1();
    void thread_tmp_cast_fu_241_p1();
    void thread_tmp_fu_268_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
